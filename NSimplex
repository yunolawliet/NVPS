#!/bin/sh

#sudo su -
#wget https://raw.githubusercontent.com/yunolawliet/NVPS/master/NSimplex && chmod +x NSimplex && ./NSimplex

# initializing var
IP=$(curl -s4 http://ifconfig.me)
INTERFACE=$(ip -4 route | grep default | head -1 | cut -d' ' -f5)
PORT=456
PROXY_PORT=7890
DNS1=1.1.1.1
DNS2=1.0.0.1

# RequirementS
apt-get update
apt-get -y upgrade 
apt-get -y install openvpn
apt-get -y install easy-rsa
apt-get -y install privoxy
apt-get -y install build-essential

echo 1 > /proc/sys/net/ipv6/conf/all/disable_ipv6
echo 1 > /proc/sys/net/ipv4/ip_forward
sed -i 's|#net.ipv4.ip_forward=1|net.ipv4.ip_forward=1|' /etc/sysctl.conf

# OpenVPN Install
mkdir /etc/openvpn/easy-rsa/
cp -r /usr/share/easy-rsa/* /etc/openvpn/easy-rsa/
sed -i 's|export KEY_COUNTRY="US"|export KEY_COUNTRY="PH"|' /etc/openvpn/easy-rsa/vars
sed -i 's|export KEY_PROVINCE="CA"|export KEY_PROVINCE="Metro Manila"|' /etc/openvpn/easy-rsa/vars
sed -i 's|export KEY_CITY="SanFrancisco"|export KEY_CITY="Manila"|' /etc/openvpn/easy-rsa/vars
sed -i 's|export KEY_ORG="Fort-Funston"|export KEY_ORG="SimplexVPN"|' /etc/openvpn/easy-rsa/vars
sed -i 's|export KEY_EMAIL="me@myhost.mydomain"|export KEY_EMAIL="admin@simplexvpn.com"|' /etc/openvpn/easy-rsa/vars
cd /etc/openvpn/easy-rsa
cp openssl-1.0.0.cnf openssl.cnf
. ./vars
./clean-all
export EASY_RSA="${EASY_RSA:-.}"
"$EASY_RSA/pkitool" --initca $*
export EASY_RSA="${EASY_RSA:-.}"
"$EASY_RSA/pkitool" --server server
export EASY_RSA="${EASY_RSA:-.}"
"$EASY_RSA/pkitool" client
./build-dh 
cd /etc/openvpn/easy-rsa/keys/
cp server.key server.crt ca.crt dh1024.pem /etc/openvpn
cd /etc/openvpn
wget "https://raw.githubusercontent.com/yunolawliet/VPSauto/master/tool/plugin.tgz"
tar -xzvf /etc/openvpn/plugin.tgz -C /usr/lib/openvpn/
chmod +x /usr/lib/openvpn/*

# Server settings
cat >> /etc/openvpn/server.conf <<-END
# Port Number.
port $PORT

# TCP or UDP server.
proto tcp

# Interface type, TUN or TAP.
dev tun

# Certificates.
ca ca.crt
cert server.crt
key server.key  # This file should be kept secret

# Diffie hellman parameters.
dh dh1024.pem

# Subnet to use for OpenVPN Connections.
server 10.8.0.0 255.255.255.0

# Keepalive: send ping every 10 seconds, tunnel down after 120 seconds no response.
keepalive 5 30

# LZO Compression for the tunnel.
comp-lzo

# Drop privileges to user/group nobody.
user nobody
group nogroup

# Makes the link more resistant to connection failures.
persist-key
persist-tun

# Username and Password authentication.
client-cert-not-required
plugin /usr/lib/openvpn/openvpn-auth-pam.so login

# OpenVPN Status Log files.
status openvpn-status.log

# LOG FILE VERBOSITY:
# 0 is silent, except for fatal errors
# 4 is reasonable for general usage
# 5 and 6 can help to debug connection problems
# 9 is extremely verbose
verb 3

# Custom
duplicate-cn
cipher none
auth none
client-cert-not-required
username-as-common-name
max-clients 5000
plugin /usr/lib/openvpn/plugins/openvpn-plugin-auth-pam.so login
# IP Assigning
ifconfig-pool-persist ipp.txt
# Clients are to use this server as a network gateway.
push "redirect-gateway def1 bypass-dhcp"
# Push these DNS addresses to clients.
push "dhcp-option DNS $DNS1"
push "dhcp-option DNS $DNS2"
# Speed-up
mssfix 1400
reneg-sec 0
sndbuf 0
rcvbuf 0
push "sndbuf 393216"
push "rcvbuf 393216"
tun-mtu 1400 
mssfix 1360
# Windows routing issues
push "route-method exe"
push "route-delay 2"
client-to-client
# Additional Scripts
persist-remote-ip
script-security 2
client-connect /etc/openvpn/up.sh
# Logging
status status.log
log openvpn.log
END

service openvpn start

#Create OpenVPN Config
cat > /client.ovpn <<-END
client
dev tun
proto tcp
remote $IP $PORT
http-proxy $IP $PROXY_PORT
http-proxy-option CUSTOM-HEADER "POST https://e9413.g.akamaiedge.net HTTP/1.0"
keepalive 5 30
pull
nobind
connect-retry-max 1
connect-retry 2 300
resolv-retry 60
setenv CLIENT_CERT 0
persist-tun
auth-user-pass
comp-lzo
verb 3
cipher none
auth none
keysize 0
reneg-sec 0
ns-cert-type server
END

echo '<ca>' >> /client.ovpn
cat /etc/openvpn/ca.crt >> /client.ovpn
echo '</ca>' >> /client.ovpn

# Create and Configure rc.local
cat > /etc/rc.local <<-END
#!/bin/sh -e
apt clean
rm -rf /etc/sysctl.con*
rm -rf /etc/sysctl.d/*.conf

cat > /etc/sysctl.conf <<-ENDD
net.ipv4.ip_forward = 1
net.ipv4.conf.default.rp_filter = 1
net.ipv4.conf.default.accept_source_route = 0
kernel.sysrq = 0
kernel.core_uses_pid = 1
net.ipv4.tcp_syncookies = 1
kernel.msgmnb = 65536
kernel.msgmax = 65536
kernel.shmmax = 68719476736
kernel.shmall = 4294967296
net.ipv4.tcp_low_latency = 1
net.core.rmem_default = 524288
net.core.rmem_max = 524288
net.core.wmem_default = 524288
net.core.wmem_max = 524288
net.ipv4.tcp_wmem = 4096 87380 524288
net.ipv4.tcp_rmem = 4096 87380 524288
net.ipv4.tcp_mem = 524288 524288 524288
net.ipv4.tcp_rfc1337 = 1
net.ipv4.ip_no_pmtu_disc = 0
net.ipv4.tcp_sack = 1
net.ipv4.tcp_fack = 1
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_timestamps = 1
net.ipv4.tcp_ecn = 0
net.ipv4.route.flush = 1
ENDD

sysctl --system &> /dev/null
sysctl -p &> /dev/null
PUBINET=$(ip -4 route ls | grep default | grep -Po '(?<=dev )(\S+)' | head -1)
iptables -I FORWARD -s 10.8.0.0/24 -j ACCEPT
iptables -t nat -A POSTROUTING -o $PUBINET -j MASQUERADE
iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o $PUBINET -j MASQUERADE
iptables -I FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT
-A INPUT -p tcp --dport $PORT  -m state --state NEW -j ACCEPT
-A INPUT -p tcp --dport $PROXY_PORT  -m state --state NEW -j ACCEPT
END

#PRIVOXY
cat >> /etc/privoxy/config <<-END
user-manual /usr/share/doc/privoxy/user-manual
confdir /etc/privoxy
logdir /var/log/privoxy
filterfile default.filter
logfile logfile
listen-address  0.0.0.0:$PROXY_PORT
toggle  1
enable-remote-toggle  0
enable-remote-http-toggle  0
enable-edit-actions 0
enforce-blocks 0
buffer-limit 4096
enable-proxy-authentication-forwarding 1
forwarded-connect-retries  1
accept-intercepted-requests 1
allow-cgi-request-crunching 1
split-large-forms 0
keep-alive-timeout 5
tolerate-pipelining 1
socket-timeout 300
permit-access 0.0.0.0/0 $IP
END

reboot
